/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CFH;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lhd
 */
public final class frmMain extends javax.swing.JFrame {

    /**
     * Creates new form frmMain
     */
    Controller c = new Controller();

    /*Set Components for main frame*/
    public frmMain() {
        initComponents();
        getCurrentDateTime();
        loadMenu();
        calTotalPrice();
    }

    void loadMenu() {
        DefaultTableModel model = (DefaultTableModel) tbOrderList.getModel();
        showListCoffee();
        showListJuice();
        showListTea();
        showListBlender();
    }

    /*Current DateTime*/
    public void getCurrentDateTime() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
        sdf.setTimeZone(TimeZone.getTimeZone("ICT"));
        lbDateTime.setText(sdf.format(new Date()));
    }

    /*Tinh tong tien*/
    void calTotalPrice() {

        tbOrderList.getModel().addTableModelListener((TableModelEvent e) -> {
            double totalP = 0;
            if (e.getType() == TableModelEvent.INSERT || e.getType() == TableModelEvent.DELETE) {
                DefaultTableModel model = (DefaultTableModel) tbOrderList.getModel();
                for (int i = 0; i < tbOrderList.getRowCount(); i++) {
                    if (tbOrderList.getRowCount() < 0) {
                        txtTongTien.setText("0");
                    } else {
                        totalP = totalP + Double.parseDouble(model.getValueAt(i, 4).toString());
                        txtTongTien.setText(Double.toString(totalP));
                    }
                }
            }
        });
    }


    /*Phan show list san pham ra menu*/
    void showListCoffee() {
        DefaultTableModel model = (DefaultTableModel) jTableListCoffee.getModel();
        try {
            ResultSet rs = c.ShowListCoffee();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("TenThucUong"), rs.getInt("DonGia")});
            }
        } catch (SQLException sql) {

        }
    }

    void showListTea() {
        DefaultTableModel model = (DefaultTableModel) jTableListTea.getModel();
        try {
            ResultSet rs = c.ShowListTea();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("TenThucUong"), rs.getInt("DonGia")});
            }
        } catch (SQLException sql) {

        }
    }

    void showListBlender() {
        DefaultTableModel model = (DefaultTableModel) jTableListBlender.getModel();
        try {
            ResultSet rs = c.ShowListBlender();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("TenThucUong"), rs.getInt("DonGia")});
            }
        } catch (SQLException sql) {

        }
    }

    void showListJuice() {
        DefaultTableModel model = (DefaultTableModel) jTableListJuice.getModel();
        try {
            ResultSet rs = c.ShowListJuice();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("TenThucUong"), rs.getInt("DonGia")});
            }
        } catch (SQLException sql) {

        }
    }


    /**/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelInfo = new javax.swing.JPanel();
        btnHuy = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        jPanelCheckout = new javax.swing.JPanel();
        lbDiscount = new javax.swing.JLabel();
        txtDiscountNumber = new javax.swing.JTextField();
        lbTotal = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jPanelOrder = new javax.swing.JPanel();
        jPanelOrderTitle = new javax.swing.JPanel();
        lbOrder = new javax.swing.JLabel();
        JPanelOrderList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbOrderList = new javax.swing.JTable();
        btnBoChon = new javax.swing.JButton();
        jPanelHeader = new javax.swing.JPanel();
        lbLogo = new javax.swing.JLabel();
        lbDateTime = new javax.swing.JLabel();
        jTabbedPaneMenu = new javax.swing.JTabbedPane();
        jPanelCoffee = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableListCoffee = new javax.swing.JTable();
        btnThemCoffee = new javax.swing.JButton();
        jPanelTea = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableListTea = new javax.swing.JTable();
        btnThemTea = new javax.swing.JButton();
        jPanelBlender = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableListBlender = new javax.swing.JTable();
        btnThemBlender = new javax.swing.JButton();
        jPanelJuice = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableListJuice = new javax.swing.JTable();
        btnThemJuice = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        menuHeThong = new javax.swing.JMenu();
        menuLogout = new javax.swing.JMenu();
        menuThoat = new javax.swing.JMenu();
        menuChucNang = new javax.swing.JMenu();
        menuQLTU = new javax.swing.JMenu();
        menuQLLoai = new javax.swing.JMenu();
        menuQLKM = new javax.swing.JMenu();
        menuThongKe = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The CàPhê House");
        setName("mainFrame\n"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelInfo.setBackground(new java.awt.Color(255, 255, 255));
        jPanelInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHuy.setBackground(new java.awt.Color(102, 102, 102));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");
        btnHuy.setToolTipText("");
        btnHuy.setBorder(null);
        btnHuy.setContentAreaFilled(false);
        btnHuy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHuy.setOpaque(true);
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanelInfo.add(btnHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 140, 50));

        btnThanhToan.setBackground(new java.awt.Color(234, 128, 37));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.setToolTipText("");
        btnThanhToan.setBorder(null);
        btnThanhToan.setContentAreaFilled(false);
        btnThanhToan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThanhToan.setOpaque(true);
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });
        jPanelInfo.add(btnThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 140, 50));

        getContentPane().add(jPanelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 600, 170));

        jPanelCheckout.setBackground(new java.awt.Color(255, 255, 255));

        lbDiscount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbDiscount.setForeground(new java.awt.Color(102, 102, 102));
        lbDiscount.setText("Discount");

        txtDiscountNumber.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtDiscountNumber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDiscountNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtDiscountNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscountNumberKeyReleased(evt);
            }
        });

        lbTotal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbTotal.setForeground(new java.awt.Color(102, 102, 102));
        lbTotal.setText("Tổng tiền");

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTongTien.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTongTien.setText("0");
        txtTongTien.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanelCheckoutLayout = new javax.swing.GroupLayout(jPanelCheckout);
        jPanelCheckout.setLayout(jPanelCheckoutLayout);
        jPanelCheckoutLayout.setHorizontalGroup(
            jPanelCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCheckoutLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(jPanelCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDiscount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotal, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(45, 45, 45)
                .addGroup(jPanelCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDiscountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanelCheckoutLayout.setVerticalGroup(
            jPanelCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCheckoutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiscountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDiscount))
                .addGap(12, 12, 12)
                .addGroup(jPanelCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotal))
                .addGap(23, 23, 23))
        );

        getContentPane().add(jPanelCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 540, 530, 130));

        jPanelOrder.setBackground(new java.awt.Color(255, 255, 255));

        jPanelOrderTitle.setBackground(new java.awt.Color(255, 255, 255));

        lbOrder.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbOrder.setText("Đơn hàng");

        javax.swing.GroupLayout jPanelOrderTitleLayout = new javax.swing.GroupLayout(jPanelOrderTitle);
        jPanelOrderTitle.setLayout(jPanelOrderTitleLayout);
        jPanelOrderTitleLayout.setHorizontalGroup(
            jPanelOrderTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrderTitleLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(lbOrder)
                .addContainerGap())
        );
        jPanelOrderTitleLayout.setVerticalGroup(
            jPanelOrderTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrderTitleLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbOrder))
        );

        JPanelOrderList.setBackground(new java.awt.Color(255, 255, 255));
        JPanelOrderList.setLayout(new javax.swing.BoxLayout(JPanelOrderList, javax.swing.BoxLayout.LINE_AXIS));

        tbOrderList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        tbOrderList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tbOrderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên", "Giá", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbOrderList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbOrderList.setColumnSelectionAllowed(true);
        tbOrderList.setRowHeight(30);
        tbOrderList.setRowMargin(8);
        tbOrderList.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tbOrderList.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tbOrderList.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tbOrderList);
        tbOrderList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbOrderList.getColumnModel().getColumnCount() > 0) {
            tbOrderList.getColumnModel().getColumn(0).setResizable(false);
            tbOrderList.getColumnModel().getColumn(0).setPreferredWidth(5);
            tbOrderList.getColumnModel().getColumn(1).setResizable(false);
            tbOrderList.getColumnModel().getColumn(2).setResizable(false);
            tbOrderList.getColumnModel().getColumn(3).setResizable(false);
            tbOrderList.getColumnModel().getColumn(4).setResizable(false);
        }

        btnBoChon.setBackground(new java.awt.Color(234, 128, 37));
        btnBoChon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBoChon.setForeground(new java.awt.Color(255, 255, 255));
        btnBoChon.setText("Bỏ chọn");
        btnBoChon.setBorder(null);
        btnBoChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoChonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOrderLayout = new javax.swing.GroupLayout(jPanelOrder);
        jPanelOrder.setLayout(jPanelOrderLayout);
        jPanelOrderLayout.setHorizontalGroup(
            jPanelOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrderLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jPanelOrderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrderLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanelOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrderLayout.createSequentialGroup()
                        .addComponent(JPanelOrderList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrderLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrderLayout.createSequentialGroup()
                        .addComponent(btnBoChon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        jPanelOrderLayout.setVerticalGroup(
            jPanelOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrderLayout.createSequentialGroup()
                .addComponent(jPanelOrderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBoChon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(506, 506, 506)
                .addComponent(JPanelOrderList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, 530, 430));

        jPanelHeader.setBackground(new java.awt.Color(234, 128, 37));

        lbLogo.setBackground(new java.awt.Color(255, 255, 255));
        lbLogo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbLogo.setForeground(new java.awt.Color(255, 255, 255));
        lbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CFH/images/logo.png"))); // NOI18N
        lbLogo.setText("The CàPhê House");

        lbDateTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDateTime.setForeground(new java.awt.Color(255, 255, 255));
        lbDateTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 696, Short.MAX_VALUE)
                .addComponent(lbDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addComponent(lbDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 110));

        jTabbedPaneMenu.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPaneMenu.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPaneMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTabbedPaneMenu.setOpaque(true);

        jPanelCoffee.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCoffee.setLayout(null);

        jTableListCoffee.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTableListCoffee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListCoffee.setRowHeight(30);
        jTableListCoffee.setRowMargin(8);
        jTableListCoffee.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTableListCoffee.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableListCoffee.setSurrendersFocusOnKeystroke(true);
        jTableListCoffee.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableListCoffee);
        jTableListCoffee.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableListCoffee.getColumnModel().getColumnCount() > 0) {
            jTableListCoffee.getColumnModel().getColumn(0).setResizable(false);
            jTableListCoffee.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanelCoffee.add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 590, 290);

        btnThemCoffee.setBackground(new java.awt.Color(234, 128, 37));
        btnThemCoffee.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemCoffee.setForeground(new java.awt.Color(255, 255, 255));
        btnThemCoffee.setText("Thêm");
        btnThemCoffee.setBorder(null);
        btnThemCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCoffeeActionPerformed(evt);
            }
        });
        jPanelCoffee.add(btnThemCoffee);
        btnThemCoffee.setBounds(490, 300, 100, 40);

        jTabbedPaneMenu.addTab("Coffee", jPanelCoffee);

        jPanelTea.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTea.setLayout(null);

        jTableListTea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTableListTea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListTea.setRowHeight(30);
        jTableListTea.setRowMargin(8);
        jTableListTea.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTableListTea.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableListTea.setSurrendersFocusOnKeystroke(true);
        jTableListTea.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTableListTea);
        jTableListTea.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableListTea.getColumnModel().getColumnCount() > 0) {
            jTableListTea.getColumnModel().getColumn(0).setResizable(false);
            jTableListTea.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanelTea.add(jScrollPane3);
        jScrollPane3.setBounds(0, 0, 590, 290);

        btnThemTea.setBackground(new java.awt.Color(234, 128, 37));
        btnThemTea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemTea.setForeground(new java.awt.Color(255, 255, 255));
        btnThemTea.setText("Thêm");
        btnThemTea.setBorder(null);
        btnThemTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemTeaActionPerformed(evt);
            }
        });
        jPanelTea.add(btnThemTea);
        btnThemTea.setBounds(490, 300, 100, 40);

        jTabbedPaneMenu.addTab("Tea & Macchiatto", jPanelTea);

        jPanelBlender.setBackground(new java.awt.Color(255, 255, 255));
        jPanelBlender.setLayout(null);

        jTableListBlender.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTableListBlender.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListBlender.setRowHeight(30);
        jTableListBlender.setRowMargin(8);
        jTableListBlender.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTableListBlender.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableListBlender.setSurrendersFocusOnKeystroke(true);
        jTableListBlender.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTableListBlender);
        jTableListBlender.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableListBlender.getColumnModel().getColumnCount() > 0) {
            jTableListBlender.getColumnModel().getColumn(0).setResizable(false);
            jTableListBlender.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanelBlender.add(jScrollPane4);
        jScrollPane4.setBounds(0, 0, 590, 290);

        btnThemBlender.setBackground(new java.awt.Color(234, 128, 37));
        btnThemBlender.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemBlender.setForeground(new java.awt.Color(255, 255, 255));
        btnThemBlender.setText("Thêm");
        btnThemBlender.setBorder(null);
        btnThemBlender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemBlenderActionPerformed(evt);
            }
        });
        jPanelBlender.add(btnThemBlender);
        btnThemBlender.setBounds(490, 300, 100, 40);

        jTabbedPaneMenu.addTab("Blender", jPanelBlender);

        jPanelJuice.setBackground(new java.awt.Color(255, 255, 255));
        jPanelJuice.setLayout(null);

        jTableListJuice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTableListJuice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListJuice.setRowHeight(30);
        jTableListJuice.setRowMargin(8);
        jTableListJuice.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTableListJuice.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableListJuice.setSurrendersFocusOnKeystroke(true);
        jTableListJuice.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTableListJuice);
        jTableListJuice.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableListJuice.getColumnModel().getColumnCount() > 0) {
            jTableListJuice.getColumnModel().getColumn(0).setResizable(false);
            jTableListJuice.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanelJuice.add(jScrollPane5);
        jScrollPane5.setBounds(0, 0, 590, 290);

        btnThemJuice.setBackground(new java.awt.Color(234, 128, 37));
        btnThemJuice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemJuice.setForeground(new java.awt.Color(255, 255, 255));
        btnThemJuice.setText("Thêm");
        btnThemJuice.setBorder(null);
        btnThemJuice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemJuiceActionPerformed(evt);
            }
        });
        jPanelJuice.add(btnThemJuice);
        btnThemJuice.setBounds(490, 300, 100, 40);

        jTabbedPaneMenu.addTab("Juice", jPanelJuice);

        getContentPane().add(jTabbedPaneMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 610, 400));

        jMenuBar.setBackground(new java.awt.Color(234, 128, 37));
        jMenuBar.setBorder(null);
        jMenuBar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        menuHeThong.setText("Hệ thống");
        menuHeThong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        menuLogout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuLogout.setText("Đăng xuất");
        menuLogout.setMargin(new java.awt.Insets(2, 2, 2, 2));
        menuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuLogoutMouseClicked(evt);
            }
        });
        menuHeThong.add(menuLogout);

        menuThoat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuThoat.setText("Thoát");
        menuThoat.setMargin(new java.awt.Insets(2, 2, 2, 2));
        menuThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThoatMouseClicked(evt);
            }
        });
        menuHeThong.add(menuThoat);

        jMenuBar.add(menuHeThong);

        menuChucNang.setText("Chức năng");
        menuChucNang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        menuQLTU.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuQLTU.setText("Quản lí thức uống");
        menuQLTU.setMargin(new java.awt.Insets(2, 2, 2, 2));
        menuQLTU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuQLTUMouseClicked(evt);
            }
        });
        menuChucNang.add(menuQLTU);

        menuQLLoai.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuQLLoai.setText("Quản lí loại");
        menuQLLoai.setMargin(new java.awt.Insets(2, 2, 2, 2));
        menuQLLoai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuQLLoaiMouseClicked(evt);
            }
        });
        menuChucNang.add(menuQLLoai);

        menuQLKM.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuQLKM.setText("Quản lí khuyến mãi");
        menuQLKM.setMargin(new java.awt.Insets(2, 2, 2, 2));
        menuQLKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuQLKMMouseClicked(evt);
            }
        });
        menuChucNang.add(menuQLKM);

        jMenuBar.add(menuChucNang);

        menuThongKe.setBorder(null);
        menuThongKe.setText("Thống kê");
        menuThongKe.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        menuThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThongKeMouseClicked(evt);
            }
        });
        jMenuBar.add(menuThongKe);

        setJMenuBar(jMenuBar);

        setSize(new java.awt.Dimension(1136, 724));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

  private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
      String message = "Bạn có muốn xóa đơn hàng?";
      String title = "Xóa đơn hàng";
      int reply = JOptionPane.showConfirmDialog(this, message, title, JOptionPane.YES_NO_OPTION);
      if (reply == JOptionPane.YES_OPTION) {
          DefaultTableModel model = (DefaultTableModel) tbOrderList.getModel();
          model.setRowCount(0);
          txtTongTien.setText("0");
          txtDiscountNumber.setText("");
          soLan = 1;
      }
  }//GEN-LAST:event_btnHuyActionPerformed

  private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
      // TODO add your handling code here:
      DefaultTableModel model = (DefaultTableModel) tbOrderList.getModel();
      int maHD = 0;

      double tongTien = Double.parseDouble(txtTongTien.getText());
      if (model.getRowCount() > 0) {
          try {
              System.out.println(getDiscountCode(txtDiscountNumber.getText()));
              ResultSet rs = c.insertHD((int) tongTien, getDiscountCode(txtDiscountNumber.getText()));
              while (rs.next()) {
                  maHD = rs.getInt(1);
              }
          } catch (SQLException ex) {
              Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
          }
          for (int i = 0; i < tbOrderList.getRowCount(); i++) {
              try {
                  ResultSet rs = c.getMaTU(model.getValueAt(i, 1).toString());
                  while (rs.next()) {
                      int maTU = rs.getInt(1);
                      int SL = Integer.parseInt(model.getValueAt(i, 3).toString());
                      c.insetCTHDtheoMaHD(maHD, maTU, SL);
                  }
              } catch (SQLException ex) {
                  Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          JOptionPane.showMessageDialog(this, "Thanh toán thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
          model.setRowCount(0);
          txtTongTien.setText("0");
          txtDiscountNumber.setText("");
          soLan = 1;
          inHoaDon(maHD);
          System.out.println(maHD);
      } else {
          JOptionPane.showMessageDialog(this, "Đơn hàng không có sản phẩm", "Thông báo", JOptionPane.ERROR_MESSAGE);
      }
  }//GEN-LAST:event_btnThanhToanActionPerformed
  
  void inHoaDon(int maHD) {
      frmHoaDon frm = new frmHoaDon();
      frm.showHD(maHD);
      frm.setVisible(true);
  }
  
  
  private void menuQLTUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuQLTUMouseClicked
      // TODO add your handling code here:
      frmQLSP frm = new frmQLSP();
      frm.setVisible(true);
  }//GEN-LAST:event_menuQLTUMouseClicked

  private void menuThongKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThongKeMouseClicked
      // TODO add your handling code here:
      frmThongKe frm = new frmThongKe();
      frm.setVisible(true);
  }//GEN-LAST:event_menuThongKeMouseClicked

  private void menuLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLogoutMouseClicked
      // TODO add your handling code here:
      frmLogin frm = new frmLogin();
      frm.setVisible(true);
      this.dispose();
  }//GEN-LAST:event_menuLogoutMouseClicked

    private void menuQLLoaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuQLLoaiMouseClicked
        // TODO add your handling code here:
        frmQLLoai frm = new frmQLLoai();
        frm.setVisible(true);
    }//GEN-LAST:event_menuQLLoaiMouseClicked

    private void btnBoChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoChonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbOrderList.getModel();
        if (tbOrderList.getSelectedRow() > -1) {
            model.removeRow(tbOrderList.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm cần xóa", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBoChonActionPerformed


    private void btnThemTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemTeaActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        DefaultTableModel model1 = (DefaultTableModel) jTableListTea.getModel();
        int[] index = jTableListTea.getSelectedRows();
        DefaultTableModel model2 = (DefaultTableModel) tbOrderList.getModel();
        for (int i = 0; i < index.length; i++) {
            if (checkProductExist(model1.getValueAt(index[i], 0).toString())) {
                JOptionPane.showMessageDialog(this, "Sản Phẩm đã tồn tại trong đơn hàng", "Thông báo", JOptionPane.ERROR_MESSAGE);
                jTableListTea.clearSelection();
            } else {
                boolean flag;
                int sl;
                String input;
                do {
                    input = JOptionPane.showInputDialog("Nhập số lượng");
                    if (!input.matches("^[0-9]*$") || input.equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                        flag = false;
                    } else {
                        sl = Integer.parseInt(input);
                        if (sl < 1 || sl > 20) {
                            JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                            flag = false;
                        } else {
                            sl = Integer.parseInt(input);
                            double thanhTien = sl * Double.parseDouble(model1.getValueAt(index[i], 1).toString());
                            model2.addRow(new Object[]{model2.getRowCount() + 1, model1.getValueAt(index[i], 0), model1.getValueAt(index[i], 1), sl, thanhTien});
                            tbOrderList.getSelectionModel().clearSelection();
                            jTableListCoffee.clearSelection();
                            flag = true;

                        }
                    }
                } while (flag == false);
            }
        }
    }//GEN-LAST:event_btnThemTeaActionPerformed

    private void btnThemBlenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemBlenderActionPerformed

        DefaultTableModel model1 = (DefaultTableModel) jTableListBlender.getModel();
        int[] index = jTableListBlender.getSelectedRows();
        DefaultTableModel model2 = (DefaultTableModel) tbOrderList.getModel();
        for (int i = 0; i < index.length; i++) {
            if (checkProductExist(model1.getValueAt(index[i], 0).toString())) {
                JOptionPane.showMessageDialog(this, "Sản Phẩm đã tồn tại trong đơn hàng", "Thông báo", JOptionPane.ERROR_MESSAGE);
                jTableListBlender.clearSelection();
            } else {
                boolean flag;
                int sl;
                String input;
                do {
                    input = JOptionPane.showInputDialog("Nhập số lượng");
                    if (!input.matches("^[0-9]*$") || input.equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                        flag = false;
                    } else {
                        sl = Integer.parseInt(input);
                        if (sl < 1 || sl > 20) {
                            JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                            flag = false;
                        } else {
                            sl = Integer.parseInt(input);
                            double thanhTien = sl * Double.parseDouble(model1.getValueAt(index[i], 1).toString());
                            model2.addRow(new Object[]{model2.getRowCount() + 1, model1.getValueAt(index[i], 0), model1.getValueAt(index[i], 1), sl, thanhTien});
                            tbOrderList.getSelectionModel().clearSelection();
                            jTableListCoffee.clearSelection();
                            flag = true;

                        }
                    }
                } while (flag == false);
            }
        }
    }//GEN-LAST:event_btnThemBlenderActionPerformed

    private void btnThemJuiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemJuiceActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        DefaultTableModel model1 = (DefaultTableModel) jTableListJuice.getModel();
        int[] index = jTableListJuice.getSelectedRows();
        DefaultTableModel model2 = (DefaultTableModel) tbOrderList.getModel();
        for (int i = 0; i < index.length; i++) {
            if (checkProductExist(model1.getValueAt(index[i], 0).toString())) {
                JOptionPane.showMessageDialog(this, "Sản Phẩm đã tồn tại trong đơn hàng", "Thông báo", JOptionPane.ERROR_MESSAGE);
                jTableListJuice.clearSelection();
            } else {
                boolean flag;
                int sl;
                String input;
                do {
                    input = JOptionPane.showInputDialog("Nhập số lượng");
                    if (!input.matches("^[0-9]*$") || input.equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                        flag = false;
                    } else {
                        sl = Integer.parseInt(input);
                        if (sl < 1 || sl > 20) {
                            JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                            flag = false;
                        } else {
                            sl = Integer.parseInt(input);
                            double thanhTien = sl * Double.parseDouble(model1.getValueAt(index[i], 1).toString());
                            model2.addRow(new Object[]{model2.getRowCount() + 1, model1.getValueAt(index[i], 0), model1.getValueAt(index[i], 1), sl, thanhTien});
                            tbOrderList.getSelectionModel().clearSelection();
                            jTableListCoffee.clearSelection();
                            flag = true;

                        }
                    }
                } while (flag == false);
            }
        }
    }//GEN-LAST:event_btnThemJuiceActionPerformed

    private void btnThemCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCoffeeActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model1 = (DefaultTableModel) jTableListCoffee.getModel();
        int[] index = jTableListCoffee.getSelectedRows();
        DefaultTableModel model2 = (DefaultTableModel) tbOrderList.getModel();
        for (int i = 0; i < index.length; i++) {
            if (checkProductExist(model1.getValueAt(index[i], 0).toString())) {
                JOptionPane.showMessageDialog(this, "Sản Phẩm đã tồn tại trong đơn hàng", "Thông báo", JOptionPane.ERROR_MESSAGE);
                jTableListCoffee.clearSelection();
            } else {
                boolean flag;
                int sl;
                String input;
                do {
                    input = JOptionPane.showInputDialog("Nhập số lượng");
                    if (!input.matches("^[0-9]*$") || input.equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                        flag = false;
                    } else {
                        sl = Integer.parseInt(input);
                        if (sl < 1 || sl > 20) {
                            JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                            flag = false;
                        } else {
                            sl = Integer.parseInt(input);
                            double thanhTien = sl * Double.parseDouble(model1.getValueAt(index[i], 1).toString());
                            model2.addRow(new Object[]{model2.getRowCount() + 1, model1.getValueAt(index[i], 0), model1.getValueAt(index[i], 1), sl, thanhTien});
                            tbOrderList.getSelectionModel().clearSelection();
                            jTableListCoffee.clearSelection();
                            flag = true;

                        }
                    }
                } while (flag == false);
            }
        }
    }//GEN-LAST:event_btnThemCoffeeActionPerformed

    private void menuThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseClicked
        // TODO add your handling code here:
        String message = "Bạn có muốn thoát?";
        String title = "Thoát chương trình";
        int reply = JOptionPane.showConfirmDialog(this, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_menuThoatMouseClicked

    /*Moi DonHang chi dược xử dụng mã giảm giá cho 1 làn thanh toán*/
    int soLan = 1;
    private void txtDiscountNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountNumberKeyReleased
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER && soLan == 1) {
            System.out.println("Keypress: " + txtDiscountNumber.getText());
            int ptGiam = 0;
            try {
                ptGiam = getDiscountPercent(txtDiscountNumber.getText());
            } catch (SQLException ex) {
                Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            double tienGiamGia = (Double.parseDouble(txtTongTien.getText()) * ptGiam) / 100;
            double priceAfterDiscount = Double.parseDouble(txtTongTien.getText()) - tienGiamGia;
            txtTongTien.setText(Double.toString(priceAfterDiscount));
            System.out.println(soLan);
            soLan++;
        }

    }//GEN-LAST:event_txtDiscountNumberKeyReleased

    private void menuQLKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuQLKMMouseClicked
        // TODO add your handling code here:
        frmQLMaKM frm = new frmQLMaKM();
        frm.setVisible(true);
    }//GEN-LAST:event_menuQLKMMouseClicked

    /*Check discount code*/
    int getDiscountPercent(String code) throws SQLException {
        ResultSet rs = c.showDiscountCode(code);
        int ptGiamGia = 0;
        while (rs.next()) {
            ptGiamGia = rs.getInt("PhanTram");
            return ptGiamGia;
        }
        return ptGiamGia;
    }

    /*Return MaKM*/
    int getDiscountCode(String code) throws SQLException {
        ResultSet rs = c.showDiscountCode(code);
        int MaKM = 1;
        while (rs.next()) {
            MaKM = rs.getInt("MaKM");
            return MaKM;
        }
        return MaKM;
    }

    /*Check khi them sp vao donHang*/
    boolean checkProductExist(String name) {
        DefaultTableModel model = (DefaultTableModel) tbOrderList.getModel();
        for (int i = 0; i < tbOrderList.getRowCount(); i++) {
            if (name.equalsIgnoreCase(model.getValueAt(i, 1).toString())) {
                return true;
            }
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /*Load SplashScreen*/
        getSlashScreen();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLogin().setVisible(true);
            }
        });

    }

    /*SplashScreen*/
    public static void getSlashScreen() throws InterruptedException {
        SplashScreen splash = new SplashScreen();
        for (int i = 0; i < 100; i++) {
            Thread.sleep(20);
            splash.setVisible(true);
            splash.lbLoading.setText("Loading..." + i);
            splash.jProgressBar.setValue(i);
        }
        splash.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelOrderList;
    private javax.swing.JButton btnBoChon;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThemBlender;
    private javax.swing.JButton btnThemCoffee;
    private javax.swing.JButton btnThemJuice;
    private javax.swing.JButton btnThemTea;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jPanelBlender;
    private javax.swing.JPanel jPanelCheckout;
    private javax.swing.JPanel jPanelCoffee;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelInfo;
    private javax.swing.JPanel jPanelJuice;
    private javax.swing.JPanel jPanelOrder;
    private javax.swing.JPanel jPanelOrderTitle;
    private javax.swing.JPanel jPanelTea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JTabbedPane jTabbedPaneMenu;
    private javax.swing.JTable jTableListBlender;
    private javax.swing.JTable jTableListCoffee;
    private javax.swing.JTable jTableListJuice;
    private javax.swing.JTable jTableListTea;
    private javax.swing.JLabel lbDateTime;
    private javax.swing.JLabel lbDiscount;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lbOrder;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JMenu menuChucNang;
    private javax.swing.JMenu menuHeThong;
    private javax.swing.JMenu menuLogout;
    private javax.swing.JMenu menuQLKM;
    private javax.swing.JMenu menuQLLoai;
    private javax.swing.JMenu menuQLTU;
    private javax.swing.JMenu menuThoat;
    private javax.swing.JMenu menuThongKe;
    private javax.swing.JTable tbOrderList;
    private javax.swing.JTextField txtDiscountNumber;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

}
